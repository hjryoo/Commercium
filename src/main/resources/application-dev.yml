# Commercium 설정 파일
spring:
  application:
    name: commercium

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:local}

  # 데이터베이스 설정
  datasource:
    url: jdbc:postgresql://localhost:5432/commercium
    username: ${DB_USERNAME:commercium_user}
    password: ${DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000

  # JPA 설정
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true

  # Redis 설정
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5

  # Kafka 설정
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: 1
      retries: 3
    consumer:
      group-id: commercium-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      auto-offset-reset: earliest
      enable-auto-commit: false
      properties:
        spring.json.trusted.packages: "com.commercium.*"

  # Security 설정
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: ${JWT_JWK_SET_URI:}

# 서버 설정
server:
  port: ${SERVER_PORT:8080}
  servlet:
    context-path: /
  shutdown: graceful

# 관리 엔드포인트 설정
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: when-authorized
  metrics:
    export:
      prometheus:
        enabled: true

# 로깅 설정
logging:
  level:
    com.commercium: INFO
    org.springframework.kafka: WARN
    org.hibernate: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: logs/commercium.log

# 애플리케이션 설정
app:
  jwt:
    secret: ${JWT_SECRET:your-256-bit-secret-key-here}
    access-token-expiry: 3600
    refresh-token-expiry: 2592000

  payment:
    provider: ${PAYMENT_PROVIDER:mock}
    mock:
      success-rate: 0.9
    toss:
      client-key: ${TOSS_CLIENT_KEY:}
      secret-key: ${TOSS_SECRET_KEY:}
      base-url: https://api.tosspayments.com/v1

  settlement:
    batch:
      daily-cron: "0 0 2 * * *"      # 매일 새벽 2시
      weekly-cron: "0 0 3 * * MON"   # 매주 월요일 새벽 3시

---
# 로컬 개발 환경
spring:
  config:
    activate:
      on-profile: local

  h2:
    console:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true

---
# 테스트 환경
spring:
  config:
    activate:
      on-profile: test

  datasource:
    url: jdbc:h2:mem:testdb
    username: sa
    password:
    driver-class-name: org.h2.Driver

  jpa:
    hibernate:
      ddl-auto: create-drop

  kafka:
    bootstrap-servers: ${spring.embedded.kafka.brokers}
